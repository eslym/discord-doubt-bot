{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import {\n    ApplicationCommandData,\n    ButtonInteraction,\n    Client,\n    ContextMenuInteraction,\n    Intents,\n    Message, MessageActionRow,\n    MessageButton, TextBasedChannels\n} from 'discord.js';\n\nconst commands: ApplicationCommandData[] = [\n    {\n        name: 'Ask for Doubt',\n        type: 'MESSAGE',\n    }\n]\n\nconst buttons: MessageActionRow[] = [\n    new MessageActionRow()\n        .addComponents(\n            new MessageButton()\n            .setStyle('SECONDARY')\n            .setEmoji('❌')\n            .setCustomId('doubt')\n        )\n]\n\nconst intents = new Intents()\n    .add(Intents.FLAGS.GUILDS)\n    .add(Intents.FLAGS.GUILD_MESSAGES)\n\nconst client = new Client({intents});\n\nasync function handleButton(button: ButtonInteraction){\n    let channel = button.channel;\n    if(!channel){\n        let guild = await client.guilds.fetch(button.guildId);\n        channel = await guild.channels.fetch(button.channelId) as TextBasedChannels;\n    }\n    let message: Message = button.message instanceof Message ?\n        button.message : await channel.messages.fetch(button.message.id);\n    let source = await message.fetchReference();\n    try{\n        await source.reply(`${button.user.toString()} doubted.`);\n        await button.reply({content: 'You doubted.', ephemeral: true});\n    } catch (_) {\n        await button.reply({content: \"Sorry, I can't help you to ask for doubt at here.\", ephemeral: true});\n    }\n}\n\nasync function handleContextMenu(context: ContextMenuInteraction){\n    let channel = context.channel;\n    if(!channel){\n        let guild = await client.guilds.fetch(context.guildId);\n        channel = await guild.channels.fetch(context.channelId) as TextBasedChannels;\n    }\n    let message: Message = await channel.messages.fetch(context.targetId);\n    try{\n        await message.reply({\n            content: 'Press ❌ to doubt.',\n            components: buttons\n        });\n        await context.reply({content: 'You asked for doubt.', ephemeral: true});\n    } catch (_) {\n        await context.reply({content: \"Sorry, I can't help you to ask for doubt at here.\", ephemeral: true});\n    }\n}\n\nclient.on('ready', ()=>(async ()=>{\n    let link = new URL('https://discord.com/oauth2/authorize');\n    link.searchParams.set('client_id', client.application.id);\n    link.searchParams.set('scope', 'bot applications.commands');\n    link.searchParams.set('permissions', '274877975552');\n    console.log('Use this link to invite bot:');\n    console.log(link.toString());\n    let guilds = await client.guilds.fetch({});\n    for(let guildData of guilds.values()){\n        let guild = await guildData.fetch();\n        if(!guild.commands){\n            continue;\n        }\n        await guild.commands.set(commands)\n            .catch(console.warn);\n    }\n})().catch(console.error));\n\nclient.on('guildCreate', (guild)=>(async ()=>{\n    await guild.commands.set(commands)\n        .catch(console.warn);\n})().catch(console.error));\n\nclient.on('interactionCreate', (interaction)=>(async ()=>{\n    if(interaction.isButton()){\n        return handleButton(interaction);\n    }\n    if (interaction.isContextMenu()){\n        return handleContextMenu(interaction);\n    }\n})().catch(console.error));\n\nclient.login(process.env.DISCORD_TOKEN)\n    .catch(console.error);\n"]}