{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import {\n    ApplicationCommandData,\n    ButtonInteraction,\n    Client,\n    ContextMenuInteraction,\n    Intents, InteractionReplyOptions,\n    Message, MessageActionRow,\n    MessageButton, MessageEmbed, OAuth2Guild, ReplyMessageOptions, Snowflake, TextBasedChannels\n} from 'discord.js';\nimport moment = require(\"moment\");\nimport Dict = NodeJS.Dict;\n\nconst commands: ApplicationCommandData[] = [\n    {\n        name: 'Ask for Doubt',\n        type: 'MESSAGE',\n    }\n]\n\nconst buttons: MessageActionRow[] = [\n    new MessageActionRow()\n        .addComponents(\n            new MessageButton()\n                .setStyle('SECONDARY')\n                .setEmoji('❌')\n                .setCustomId('doubt')\n        )\n]\n\nconst presetEmbed: Dict<InteractionReplyOptions> = {\n    askForDoubt: {\n        embeds: [\n            new MessageEmbed()\n                .setDescription('You asked for doubt.')\n                .setColor('BLUE')\n        ],\n        ephemeral: true,\n    },\n\n    askForDoubtFailed: {\n        embeds: [\n            new MessageEmbed()\n                .setDescription(\"Sorry, I can't help you to ask for doubt at here.\")\n                .setColor('RED')\n        ],\n        ephemeral: true,\n    },\n\n    doubt: {\n        embeds: [\n            new MessageEmbed()\n                .setDescription('You doubted.')\n                .setColor('BLUE')\n        ],\n        ephemeral: true,\n    },\n\n    doubtFailed: {\n        embeds: [\n            new MessageEmbed()\n                .setDescription(\"Sorry, I can't help you to doubt here.\")\n                .setColor('RED')\n        ],\n        ephemeral: true,\n    },\n}\n\nconst intents = new Intents()\n    .add(Intents.FLAGS.GUILDS)\n    .add(Intents.FLAGS.GUILD_MESSAGES)\n\nconst client = new Client({intents});\n\nfunction randomByte() {\n    return 128 + Math.floor(Math.random() * 128);\n}\n\nasync function handleButton(button: ButtonInteraction) {\n    try {\n        let channel = button.channel;\n        if (!channel) {\n            let guild = await client.guilds.fetch(button.guildId);\n            channel = await guild.channels.fetch(button.channelId) as TextBasedChannels;\n        }\n        let message: Message = button.message instanceof Message ?\n            button.message : await channel.messages.fetch(button.message.id);\n        let source = await message.fetchReference();\n        let embed = new MessageEmbed()\n            .setColor([randomByte(), randomByte(), randomByte()])\n            .setDescription(`${button.user} doubted.`)\n            .setFooter(moment().format('D MMM YYYY, hh:mm A'), button.user.avatarURL());\n        await source.reply({embeds: [embed]});\n        await button.reply(presetEmbed.doubt);\n    } catch (_) {\n        await button.reply(presetEmbed.doubtFailed);\n    }\n}\n\nasync function handleContextMenu(context: ContextMenuInteraction) {\n    try {\n        let channel = context.channel;\n        if (!channel) {\n            let guild = await client.guilds.fetch(context.guildId);\n            channel = await guild.channels.fetch(context.channelId) as TextBasedChannels;\n        }\n        let message: Message = await channel.messages.fetch(context.targetId);\n        let embed = new MessageEmbed()\n            .setColor([randomByte(), randomByte(), randomByte()])\n            .setTitle('Press ❌ to doubt.')\n            .setDescription(`${context.user} wants to doubt.`)\n            .setFooter(moment().format('D MMM YYYY, hh:mm A'), context.user.avatarURL());\n        await message.reply({\n            embeds: [embed],\n            components: buttons\n        });\n        await context.reply(presetEmbed.askForDoubt);\n    } catch (_) {\n        await context.reply(presetEmbed.askForDoubtFailed);\n    }\n}\n\nclient.on('ready', () => (async () => {\n    let link = new URL('https://discord.com/oauth2/authorize');\n    link.searchParams.set('client_id', client.application.id);\n    link.searchParams.set('scope', 'bot applications.commands');\n    link.searchParams.set('permissions', '274877975552');\n    console.log('Use this link to invite bot:');\n    console.log(link.toString());\n    let guilds = await client.guilds.fetch();\n    while(guilds.size > 0){\n        let latest: Snowflake = undefined;\n        for (let apiGuild of guilds.values()){\n            latest = apiGuild.id;\n            try{\n                let guild = await apiGuild.fetch();\n                if (!guild.commands) {\n                    continue;\n                }\n                await guild.commands.set(commands);\n            } catch (err){\n                console.warn(err);\n            }\n        }\n        guilds = await client.guilds.fetch({after: latest});\n    }\n})().catch(console.error));\n\nclient.on('guildCreate', (guild) => (async () => {\n    await guild.commands.set(commands)\n        .catch(console.warn);\n})().catch(console.error));\n\nclient.on('interactionCreate', (interaction) => (async () => {\n    if (interaction.isButton()) {\n        return handleButton(interaction);\n    }\n    if (interaction.isContextMenu()) {\n        return handleContextMenu(interaction);\n    }\n})().catch(console.error));\n\nclient.login(process.env.DISCORD_TOKEN)\n    .catch(console.error);\n"]}